/**
 @file eve_images.c
 */
/*
 * ============================================================================
 * History
 * =======
 * Nov 2019		Initial beta for FT81x and FT80x
 * Mar 2020		Updated beta - added BT815/6 commands
 * Mar 2021		Beta with BT817/8 support added
 *
 *
 *
 *
 *
* (C) Copyright,  Bridgetek Pte. Ltd.
 * ============================================================================
 *
 * This source code ("the Software") is provided by Bridgetek Pte Ltd
 * ("Bridgetek") subject to the licence terms set out
 * http://www.ftdichip.com/FTSourceCodeLicenceTerms.htm ("the Licence Terms").
 * You must read the Licence Terms before downloading or using the Software.
 * By installing or using the Software you agree to the Licence Terms. If you
 * do not agree to the Licence Terms then do not download or use the Software.
 *
 * Without prejudice to the Licence Terms, here is a summary of some of the key
 * terms of the Licence Terms (and in the event of any conflict between this
 * summary and the Licence Terms then the text of the Licence Terms will
 * prevail).
 *
 * The Software is provided "as is".
 * There are no warranties (or similar) in relation to the quality of the
 * Software. You use it at your own risk.
 * The Software should not be used in, or for, any medical device, system or
 * appliance. There are exclusions of Bridgetek liability for certain types of loss
 * such as: special loss or damage; incidental loss or damage; indirect or
 * consequential loss or damage; loss of income; loss of business; loss of
 * profits; loss of revenue; loss of contracts; business interruption; loss of
 * the use of money or anticipated savings; loss of information; loss of
 * opportunity; loss of goodwill or reputation; and/or loss of, damage to or
 * corruption of data.
 * There is a monetary cap on Bridgetek's liability.
 * The Software may have subsequently been amended by another user and then
 * distributed by that other user ("Adapted Software").  If so that user may
 * have additional licence terms that apply to those amendments. However, Bridgetek
 * has no liability in relation to those amendments.
 * ============================================================================
 */

#include <stdint.h>
#include <string.h>

#include "EVE.h"

#include "eve_example.h"

uint32_t eve_img_bridgetek_logo_width;
uint32_t eve_img_bridgetek_logo_height;

#ifdef __GNUC__
static const uint8_t img_bridgetek_logo[] __attribute__((aligned(4))) =
#else // __GNUC__
static const uint8_t img_bridgetek_logo[] =
#endif // __GNUC__
{
	/*000:*/ 0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01,
	/*010:*/ 0x00, 0x01, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43, 0x00, 0x03, 0x02, 0x02, 0x03, 0x02, 0x02, 0x03,
	/*020:*/ 0x03, 0x03, 0x03, 0x04, 0x03, 0x03, 0x04, 0x05, 0x08, 0x05, 0x05, 0x04, 0x04, 0x05, 0x0A, 0x07,
	/*030:*/ 0x07, 0x06, 0x08, 0x0C, 0x0A, 0x0C, 0x0C, 0x0B, 0x0A, 0x0B, 0x0B, 0x0D, 0x0E, 0x12, 0x10, 0x0D,
	/*040:*/ 0x0E, 0x11, 0x0E, 0x0B, 0x0B, 0x10, 0x16, 0x10, 0x11, 0x13, 0x14, 0x15, 0x15, 0x15, 0x0C, 0x0F,
	/*050:*/ 0x17, 0x18, 0x16, 0x14, 0x18, 0x12, 0x14, 0x15, 0x14, 0xFF, 0xDB, 0x00, 0x43, 0x01, 0x03, 0x04,
	/*060:*/ 0x04, 0x05, 0x04, 0x05, 0x09, 0x05, 0x05, 0x09, 0x14, 0x0D, 0x0B, 0x0D, 0x14, 0x14, 0x14, 0x14,
	/*070:*/ 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
	/*080:*/ 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
	/*090:*/ 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0xFF, 0xC0,
	/*0A0:*/ 0x00, 0x11, 0x08, 0x00, 0x3C, 0x00, 0x93, 0x03, 0x01, 0x22, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11,
	/*0B0:*/ 0x01, 0xFF, 0xC4, 0x00, 0x1C, 0x00, 0x01, 0x00, 0x03, 0x01, 0x01, 0x00, 0x03, 0x00, 0x00, 0x00,
	/*0C0:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0x08, 0x09, 0x05, 0x02, 0x03, 0x04, 0xFF,
	/*0D0:*/ 0xC4, 0x00, 0x38, 0x10, 0x00, 0x01, 0x03, 0x03, 0x03, 0x02, 0x04, 0x03, 0x05, 0x07, 0x05, 0x01,
	/*0E0:*/ 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x11, 0x00, 0x07, 0x12, 0x08, 0x21,
	/*0F0:*/ 0x13, 0x14, 0x31, 0x41, 0x22, 0x23, 0x51, 0x15, 0x16, 0x32, 0x61, 0x81, 0x09, 0x17, 0x38, 0x42,
	/*100:*/ 0x71, 0x76, 0x91, 0x52, 0x62, 0x72, 0xA1, 0xB3, 0xB4, 0xFF, 0xC4, 0x00, 0x1B, 0x01, 0x01, 0x00,
	/*110:*/ 0x02, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	/*120:*/ 0x05, 0x03, 0x04, 0x06, 0x02, 0x07, 0xFF, 0xC4, 0x00, 0x2E, 0x11, 0x00, 0x01, 0x04, 0x00, 0x04,
	/*130:*/ 0x05, 0x02, 0x05, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x03, 0x11,
	/*140:*/ 0x04, 0x05, 0x21, 0x31, 0x12, 0x13, 0x22, 0x41, 0x51, 0x15, 0x61, 0x42, 0x71, 0x81, 0x91, 0xC1,
	/*150:*/ 0x06, 0x32, 0x52, 0xA1, 0xD1, 0xF0, 0xFF, 0xDA, 0x00, 0x0C, 0x03, 0x01, 0x00, 0x02, 0x11, 0x03,
	/*160:*/ 0x11, 0x00, 0x3F, 0x00, 0xEA, 0x9E, 0x9A, 0x6A, 0x31, 0xB9, 0x7B, 0x91, 0x40, 0xDA, 0x3B, 0x22,
	/*170:*/ 0xAB, 0x76, 0x5C, 0xF3, 0x3C, 0x8D, 0x16, 0x9A, 0xDF, 0x88, 0xF3, 0xA1, 0x05, 0x6A, 0x24, 0x90,
	/*180:*/ 0x94, 0xA1, 0x29, 0x1E, 0xAA, 0x52, 0x88, 0x48, 0x1F, 0x52, 0x34, 0x45, 0x27, 0xD3, 0x58, 0xFE,
	/*190:*/ 0xB9, 0xD4, 0x6D, 0xC1, 0x65, 0xDD, 0xEF, 0xEF, 0x04, 0xCB, 0xD6, 0x87, 0x56, 0xE9, 0xE2, 0xA7,
	/*1A0:*/ 0x46, 0x49, 0xA7, 0x44, 0x61, 0x00, 0x4E, 0x54, 0xC1, 0x90, 0x98, 0xCC, 0xB7, 0x9E, 0x46, 0x41,
	/*1B0:*/ 0x73, 0x97, 0x32, 0xA3, 0xC4, 0x24, 0x10, 0xA0, 0x92, 0x8E, 0xD7, 0x07, 0x4B, 0x3B, 0xC1, 0x72,
	/*1C0:*/ 0x6F, 0xB6, 0xD7, 0xFD, 0xF1, 0xB8, 0xED, 0x91, 0x6A, 0xA6, 0x6C, 0xE7, 0x7E, 0xCC, 0x88, 0x0A,
	/*1D0:*/ 0x89, 0x76, 0x10, 0x08, 0xF0, 0xDD, 0x25, 0x5D, 0xC9, 0x51, 0x2B, 0x19, 0x00, 0x02, 0x12, 0x08,
	/*1E0:*/ 0x18, 0x3D, 0xCA, 0x55, 0xC1, 0xA6, 0x9A, 0x68, 0xA1, 0x34, 0xD3, 0x4D, 0x11, 0x34, 0xD3, 0x4D,
	/*1F0:*/ 0x11, 0x34, 0xD3, 0x4D, 0x11, 0x34, 0xD3, 0x4D, 0x11, 0x34, 0xD3, 0x4D, 0x11, 0x34, 0xD3, 0x4D,
	/*200:*/ 0x11, 0x34, 0xD3, 0x4D, 0x11, 0x47, 0x37, 0x12, 0xFE, 0xA4, 0x6D, 0x6D, 0x91, 0x59, 0xBB, 0x2B,
	/*210:*/ 0xCE, 0x3A, 0xD5, 0x22, 0x93, 0x1D, 0x52, 0x64, 0x29, 0x86, 0x8B, 0x8B, 0xE2, 0x3D, 0x02, 0x52,
	/*220:*/ 0x3D, 0x49, 0x24, 0x0F, 0xA7, 0x7E, 0xE4, 0x0C, 0x9D, 0x64, 0x5B, 0xEB, 0x7B, 0x3C, 0xFC, 0xB6,
	/*230:*/ 0xB7, 0x9E, 0x6D, 0xFB, 0x4D, 0xAB, 0x74, 0xED, 0x59, 0xA1, 0xB9, 0x02, 0x4D, 0x9D, 0x3E, 0x18,
	/*240:*/ 0x32, 0x5F, 0x95, 0x82, 0x93, 0x0D, 0x0C, 0xE7, 0x0A, 0x79, 0x4B, 0xC9, 0x2E, 0x15, 0x61, 0x29,
	/*250:*/ 0x4A, 0x81, 0xCA, 0x40, 0x56, 0xB6, 0xA5, 0x4D, 0x2C, 0xAE, 0x9B, 0x2D, 0x32, 0x63, 0x89, 0x71,
	/*260:*/ 0xCB, 0x4B, 0x0E, 0x47, 0x28, 0x0B, 0x0E, 0xA7, 0x07, 0x29, 0xE2, 0x7B, 0x1C, 0x8E, 0xD8, 0xF7,
	/*270:*/ 0xCE, 0xB9, 0x6F, 0xB4, 0xB4, 0xAA, 0x7F, 0x52, 0x6E, 0xDC, 0xDB, 0xB9, 0x79, 0xD3, 0x9B, 0x97,
	/*280:*/ 0x60, 0x6D, 0xBA, 0x16, 0xDD, 0x13, 0x6A, 0x6D, 0xD6, 0xC1, 0x53, 0x48, 0x48, 0xE6, 0x90, 0xB6,
	/*290:*/ 0x06, 0x30, 0x83, 0xEA, 0xA5, 0x11, 0xF3, 0x14, 0x95, 0xE7, 0x09, 0x47, 0x12, 0x52, 0x17, 0xD1,
	/*2A0:*/ 0x4D, 0xA6, 0x53, 0x2E, 0x5A, 0x14, 0x0D, 0xF0, 0xDE, 0xFA, 0x7B, 0x56, 0xD6, 0xD4, 0x51, 0x11,
	/*2B0:*/ 0xE5, 0xEC, 0x5D, 0xB6, 0x86, 0x38, 0x89, 0xC0, 0x77, 0x6D, 0x29, 0x6C, 0xE3, 0x92, 0x14, 0x40,
	/*2C0:*/ 0x52, 0xD6, 0xAE, 0xEE, 0x1C, 0xA9, 0x58, 0x40, 0x00, 0xEC, 0xDE, 0x86, 0x37, 0xB6, 0xB9, 0xD4,
	/*2D0:*/ 0x0E, 0xD4, 0x56, 0xEE, 0xCA, 0xE3, 0x6C, 0x45, 0x52, 0xEB, 0xF2, 0x23, 0x43, 0x81, 0x15, 0x01,
	/*2E0:*/ 0x2D, 0x43, 0x8A, 0x86, 0x99, 0xF0, 0xD9, 0x4E, 0x00, 0xCE, 0x39, 0x1F, 0x88, 0xF7, 0x24, 0x9F,
	/*2F0:*/ 0x41, 0x80, 0x39, 0x0D, 0xD4, 0x07, 0x50, 0x17, 0x37, 0x51, 0x37, 0xCB, 0x97, 0x05, 0xC0, 0xE2,
	/*300:*/ 0x58, 0x8C, 0xD0, 0x2C, 0xD3, 0xA9, 0x31, 0xC9, 0x11, 0xA9, 0xEC, 0x67, 0xB3, 0x6D, 0x8F, 0xD0,
	/*310:*/ 0x65, 0x58, 0xCA, 0x88, 0xFA, 0x00, 0x07, 0x4D, 0xBF, 0x64, 0xF7, 0xF0, 0xC3, 0x3B, 0xFB, 0x8E,
	/*320:*/ 0x5F, 0xFE, 0x31, 0xF5, 0x0A, 0x4A, 0xBF, 0x7A, 0x9A, 0xB9, 0x6A, 0x96, 0x86, 0xC9, 0x5C, 0x75,
	/*330:*/ 0x6A, 0x34, 0xD7, 0x69, 0xD5, 0x28, 0xE1, 0x82, 0xD4, 0x96, 0x48, 0x0A, 0x46, 0x5F, 0x6D, 0x27,
	/*340:*/ 0x19, 0xFA, 0x82, 0x47, 0xEB, 0xAC, 0x68, 0xD6, 0xE5, 0x6F, 0x5F, 0xEE, 0xB4, 0xEE, 0x02, 0x2F,
	/*350:*/ 0x77, 0x95, 0x46, 0x6E, 0x7F, 0xD9, 0xEA, 0x68, 0xBB, 0x97, 0x83, 0x9C, 0x42, 0xB3, 0xC4, 0xA3,
	/*360:*/ 0x89, 0x4F, 0x71, 0xEF, 0xFA, 0x6B, 0x5C, 0x75, 0x7D, 0xFC, 0x3C, 0x5D, 0x9F, 0xF1, 0x8F, 0xFF,
	/*370:*/ 0x00, 0xD2, 0xD6, 0xB0, 0xAC, 0x5A, 0x25, 0xF0, 0xEF, 0x4F, 0xAE, 0xD4, 0xC5, 0x45, 0xA5, 0x58,
	/*380:*/ 0x0D, 0x55, 0xF8, 0xBB, 0x4E, 0x4A, 0xD2, 0x97, 0x7C, 0xC7, 0x14, 0x8E, 0x7F, 0x83, 0x38, 0xC1,
	/*390:*/ 0x03, 0xF1, 0x1E, 0xFE, 0xDE, 0xFA, 0xFA, 0x1E, 0x41, 0x14, 0x6E, 0xC1, 0xF1, 0x3D, 0xAD, 0xB3,
	/*3A0:*/ 0x25, 0x75, 0x00, 0x6C, 0x50, 0xD0, 0x7B, 0xF8, 0x5F, 0x3B, 0xCF, 0xE5, 0x91, 0xB8, 0xCE, 0x16,
	/*3B0:*/ 0xB9, 0xD4, 0x23, 0xBE, 0x92, 0x45, 0x1B, 0x3A, 0x9F, 0x6F, 0x2B, 0x7E, 0x6C, 0x0E, 0xE8, 0x3D,
	/*3C0:*/ 0x7D, 0x6C, 0xCD, 0x02, 0xE4, 0xB8, 0xA5, 0xC7, 0x8F, 0x35, 0xFF, 0x00, 0x11, 0x87, 0x9F, 0x71,
	/*3D0:*/ 0x49, 0x69, 0x0E, 0x2D, 0x0E, 0x2D, 0x00, 0xFB, 0x00, 0x48, 0x4E, 0x48, 0x1E, 0xF9, 0xC0, 0xD5,
	/*3E0:*/ 0x80, 0xD5, 0xC7, 0x49, 0x93, 0x3D, 0x30, 0x19, 0xAA, 0xC2, 0x76, 0x72, 0xD1, 0xE2, 0x26, 0x32,
	/*3F0:*/ 0x24, 0x20, 0xB8, 0x52, 0x46, 0x42, 0x82, 0x41, 0xC9, 0x18, 0xEF, 0x9D, 0x62, 0x3D, 0xD6, 0xAC,
	/*400:*/ 0xD1, 0x6B, 0x5D, 0x15, 0x59, 0xAE, 0xD0, 0x60, 0x39, 0x4B, 0x86, 0xC5, 0x5C, 0x32, 0xA8, 0xCE,
	/*410:*/ 0x39, 0xE2, 0x29, 0x0E, 0x84, 0xBF, 0xCC, 0xF3, 0xC0, 0xCF, 0x22, 0x4A, 0xBD, 0x07, 0xE2, 0xC6,
	/*420:*/ 0x06, 0xBD, 0x9D, 0x96, 0xE9, 0xB2, 0xAB, 0x1A, 0xE9, 0xDB, 0x1B, 0xF6, 0x88, 0xE8, 0x5D, 0x18,
	/*430:*/ 0xD3, 0xE3, 0xCB, 0xA8, 0x99, 0x72, 0xBE, 0x68, 0x78, 0xF3, 0x0B, 0x08, 0x48, 0x4F, 0xE0, 0xE1,
	/*440:*/ 0xC0, 0x01, 0x93, 0xEF, 0xAA, 0xB9, 0xF2, 0xBC, 0x39, 0x6C, 0xB8, 0x89, 0x1F, 0xCB, 0xEA, 0x78,
	/*450:*/ 0x0D, 0xA1, 0xB8, 0xD4, 0x0B, 0xBF, 0xA2, 0xB4, 0x83, 0x34, 0xC4, 0x07, 0x45, 0x87, 0x8D, 0x9C,
	/*460:*/ 0xCE, 0x96, 0x12, 0xEB, 0x3B, 0x1D, 0x09, 0xAA, 0xFA, 0xAB, 0xC7, 0x62, 0x28, 0x17, 0xBD, 0x1A,
	/*470:*/ 0xAD, 0x5B, 0x5D, 0xD9, 0x7C, 0xC0, 0xBB, 0x63, 0xAD, 0x08, 0x11, 0xD9, 0x87, 0x24, 0xBA, 0x58,
	/*480:*/ 0x21, 0x47, 0x25, 0x43, 0x88, 0xC6, 0x46, 0x3F, 0xC6, 0xBC, 0x3E, 0xAC, 0x37, 0x4A, 0x4D, 0xBB,
	/*490:*/ 0xB4, 0xCA, 0xA9, 0x59, 0xF7, 0x13, 0x6D, 0x54, 0x19, 0xA9, 0xB2, 0xC3, 0xCF, 0x53, 0x9F, 0x43,
	/*4A0:*/ 0x8A, 0x42, 0x4A, 0x1C, 0xCA, 0x55, 0x8C, 0xE3, 0xB8, 0x1F, 0xE3, 0x59, 0xDB, 0xA6, 0xA9, 0x0E,
	/*4B0:*/ 0xC6, 0xB4, 0xB7, 0xC5, 0xD6, 0x5C, 0x53, 0x4E, 0x37, 0x41, 0x77, 0x82, 0xD0, 0x70, 0x53, 0xF0,
	/*4C0:*/ 0xBB, 0xE8, 0x7D, 0xB5, 0x57, 0xC0, 0xB2, 0xA1, 0x49, 0xD8, 0x6A, 0xD5, 0xD6, 0xA7, 0xE5, 0x0A,
	/*4D0:*/ 0x93, 0x15, 0xC6, 0x60, 0x06, 0xD2, 0xE0, 0xF0, 0x54, 0xDA, 0x9A, 0x5A, 0xCE, 0x53, 0x8C, 0x93,
	/*4E0:*/ 0x90, 0x3B, 0xE7, 0x57, 0x31, 0xE5, 0x4C, 0x38, 0xF7, 0x4B, 0x33, 0x81, 0xE1, 0x73, 0x05, 0x06,
	/*4F0:*/ 0x80, 0x0D, 0x81, 0xDA, 0xE8, 0x2A, 0x79, 0x33, 0x57, 0x8C, 0x0B, 0x62, 0x85, 0xA4, 0x71, 0x35,
	/*500:*/ 0xE6, 0xCB, 0x89, 0x22, 0x89, 0xEF, 0xB9, 0xFF, 0x00, 0x82, 0xE8, 0x96, 0xCC, 0x5E, 0x0A, 0x9B,
	/*510:*/ 0xB2, 0xB6, 0xBD, 0x76, 0xE3, 0xAA, 0xB6, 0x1E, 0x91, 0x11, 0x2B, 0x91, 0x36, 0x6B, 0xA9, 0x6C,
	/*520:*/ 0x29, 0x45, 0x47, 0xD5, 0x47, 0x03, 0x53, 0x76, 0xEE, 0x0A, 0x5B, 0xAE, 0x47, 0x6D, 0x15, 0x28,
	/*530:*/ 0x8B, 0x72, 0x42, 0x42, 0x99, 0x42, 0x5F, 0x49, 0x2E, 0x03, 0xE8, 0x52, 0x33, 0xDC, 0x1C, 0x7B,
	/*540:*/ 0x6B, 0x01, 0xEF, 0xE4, 0xC7, 0xD1, 0xD3, 0x8E, 0xCA, 0xC5, 0x4B, 0xAA, 0x4B, 0x0E, 0x47, 0x90,
	/*550:*/ 0xE2, 0xDB, 0x07, 0x01, 0x4A, 0x4F, 0x00, 0x93, 0xFD, 0x40, 0x52, 0x87, 0xEA, 0x75, 0xF3, 0x89,
	/*560:*/ 0x64, 0x53, 0xF6, 0xF7, 0xAA, 0xFB, 0x12, 0x8F, 0x4A, 0x5C, 0x95, 0x41, 0x0A, 0x80, 0xF8, 0x4C,
	/*570:*/ 0x97, 0x79, 0x90, 0xA5, 0xA5, 0x2B, 0x56, 0x3B, 0x0E, 0xDC, 0x89, 0x38, 0xFC, 0xF5, 0x5A, 0xEC,
	/*580:*/ 0x96, 0x39, 0x83, 0xE6, 0xE6, 0x51, 0x26, 0x42, 0x00, 0x1A, 0x53, 0x0D, 0x79, 0xFC, 0x2B, 0x26,
	/*590:*/ 0x67, 0x52, 0x42, 0x59, 0x0F, 0x2E, 0xC0, 0x11, 0x82, 0x49, 0xD6, 0xDE, 0x2F, 0xC7, 0xE5, 0x6F,
	/*5A0:*/ 0x6A, 0xB5, 0xCF, 0x46, 0xA0, 0xAD, 0x08, 0xA9, 0xD5, 0xA0, 0xD3, 0x96, 0xB1, 0x94, 0xA6, 0x5C,
	/*5B0:*/ 0x94, 0x34, 0x54, 0x3F, 0x2E, 0x44, 0x6B, 0xCB, 0xBE, 0x2F, 0x88, 0xD6, 0x9E, 0xDF, 0xD6, 0x6E,
	/*5C0:*/ 0x88, 0xEB, 0x8F, 0x3D, 0x98, 0x30, 0xDD, 0x94, 0xD0, 0x0F, 0x84, 0xB6, 0xF9, 0x4A, 0x49, 0x09,
	/*5D0:*/ 0x0B, 0x19, 0x1D, 0xC8, 0xC7, 0x6C, 0xEB, 0x9E, 0xD7, 0x4D, 0x62, 0x87, 0x57, 0xEA, 0x26, 0xFA,
	/*5E0:*/ 0x76, 0xF8, 0x8D, 0x53, 0xAC, 0xC2, 0x4C, 0x99, 0xCC, 0xB0, 0xD4, 0x05, 0x1F, 0x11, 0x2B, 0x42,
	/*5F0:*/ 0xCA, 0x19, 0xFE, 0x61, 0xF0, 0xA4, 0x00, 0x3D, 0x7D, 0x87, 0x63, 0xA9, 0x0E, 0xC6, 0xD1, 0x24,
	/*600:*/ 0x5C, 0x1B, 0x0D, 0xBC, 0x54, 0x8A, 0xBF, 0x9D, 0x6E, 0x9F, 0x0A, 0x1B, 0x35, 0x38, 0xAD, 0x2B,
	/*610:*/ 0x29, 0x09, 0x79, 0x01, 0xE5, 0x64, 0x64, 0x63, 0x04, 0xA1, 0x1C, 0x87, 0xB8, 0x03, 0x47, 0x64,
	/*620:*/ 0x11, 0xC3, 0x13, 0x66, 0x7B, 0xCF, 0xC1, 0x7A, 0x68, 0x43, 0x88, 0x1A, 0x1B, 0xEC, 0x8D, 0xCF,
	/*630:*/ 0xA4, 0x9A, 0x57, 0xC2, 0xC6, 0x0F, 0x8E, 0xB5, 0xD4, 0x16, 0x8B, 0x04, 0x8A, 0xEE, 0xB5, 0x97,
	/*640:*/ 0x4E, 0xFB, 0xF8, 0x8D, 0xF3, 0xB7, 0xA7, 0xCF, 0x7E, 0x0C, 0x7A, 0x34, 0xB8, 0xF3, 0x15, 0x19,
	/*650:*/ 0x10, 0xD3, 0x2C, 0x3A, 0xB7, 0x12, 0x10, 0x85, 0x73, 0xC1, 0x09, 0x38, 0xF8, 0x88, 0xF4, 0xF6,
	/*660:*/ 0xD5, 0x8B, 0x22, 0xF2, 0xB7, 0xE2, 0x4E, 0x30, 0x9F, 0xAE, 0x53, 0x59, 0x98, 0x0F, 0x13, 0x1D,
	/*670:*/ 0xC9, 0x6D, 0xA5, 0xC0, 0x7E, 0x9C, 0x49, 0xCE, 0xB1, 0x0F, 0x4A, 0xB6, 0x44, 0x18, 0xFB, 0x4D,
	/*680:*/ 0x7E, 0x6E, 0x13, 0x0F, 0x4A, 0x62, 0xE3, 0xA4, 0x47, 0x9F, 0x1E, 0x22, 0xDB, 0x70, 0x06, 0xD0,
	/*690:*/ 0x3C, 0x98, 0x50, 0x57, 0x1C, 0x67, 0x90, 0x2A, 0x3D, 0xF3, 0xF4, 0xD5, 0x1B, 0x47, 0x36, 0xFC,
	/*6A0:*/ 0xED, 0xBD, 0xAF, 0xA6, 0x4D, 0x3A, 0xA9, 0x32, 0xF1, 0x5C, 0xB6, 0x95, 0x0A, 0x63, 0x04, 0x96,
	/*6B0:*/ 0x1B, 0x6B, 0x3F, 0x30, 0x2C, 0x72, 0xF5, 0x23, 0x3E, 0xC7, 0xDB, 0xD3, 0x59, 0xDD, 0x90, 0xE1,
	/*6C0:*/ 0xF1, 0x18, 0x99, 0x44, 0x4E, 0x2D, 0x6B, 0x48, 0x14, 0x05, 0xD1, 0x3F, 0x33, 0xB0, 0xDE, 0xFF,
	/*6D0:*/ 0x00, 0xC5, 0xAE, 0xDC, 0xF7, 0x11, 0x87, 0xC3, 0x44, 0x65, 0x68, 0x73, 0x9C, 0x09, 0xB2, 0x6A,
	/*6E0:*/ 0xC0, 0xF9, 0x0D, 0xCE, 0xD4, 0xB6, 0xBF, 0x5A, 0xDB, 0x89, 0x71, 0x6D, 0xED, 0xAD, 0x6D, 0xCA,
	/*6F0:*/ 0xB7, 0x2A, 0xEF, 0xD2, 0x9E, 0x93, 0x31, 0x6D, 0xBA, 0xB8, 0xE4, 0x0E, 0x69, 0xE2, 0x08, 0x07,
	/*700:*/ 0x57, 0x3D, 0x8D, 0x72, 0xC7, 0x97, 0x68, 0xDB, 0x3E, 0x7E, 0xA6, 0xC2, 0xEA, 0x92, 0xE9, 0xB1,
	/*710:*/ 0x5D, 0x5A, 0x5D, 0x79, 0x21, 0xD7, 0x56, 0xB6, 0x92, 0x49, 0xE3, 0xEA, 0x49, 0x24, 0xFB, 0x6B,
	/*720:*/ 0x09, 0xEE, 0x9C, 0xFA, 0x84, 0xDE, 0x93, 0xB6, 0xC5, 0x55, 0x25, 0xBC, 0xE4, 0x96, 0x6A, 0x13,
	/*730:*/ 0x19, 0x1E, 0x3E, 0x79, 0x84, 0x25, 0x6A, 0x08, 0x1D, 0xFD, 0x82, 0x70, 0x07, 0xE4, 0x06, 0xBD,
	/*740:*/ 0xBE, 0x96, 0x1C, 0xFD, 0xEA, 0x75, 0x1C, 0x9A, 0xCD, 0x54, 0xA5, 0x95, 0x51, 0xE9, 0xA9, 0x72,
	/*750:*/ 0x34, 0x37, 0x09, 0xCF, 0xCA, 0x6D, 0xB8, 0xED, 0x80, 0x3F, 0xDA, 0x08, 0x57, 0xF5, 0x19, 0xD2,
	/*760:*/ 0x6C, 0xA9, 0x9E, 0x9D, 0x6E, 0x35, 0xCA, 0x32, 0x59, 0x03, 0x53, 0x46, 0x80, 0xFA, 0xFF, 0x00,
	/*770:*/ 0x49, 0x0E, 0x6A, 0xFF, 0x00, 0x51, 0xA6, 0x82, 0x79, 0x82, 0x3A, 0x04, 0xE8, 0x2C, 0x59, 0x3F,
	/*780:*/ 0x4F, 0xED, 0x6F, 0xBD, 0x34, 0xD3, 0x5C, 0x1A, 0xEF, 0x14, 0x5F, 0x73, 0xEE, 0x6A, 0xBD, 0x9B,
	/*790:*/ 0xB7, 0xD5, 0xFA, 0xDD, 0x02, 0x80, 0xF5, 0xD1, 0x58, 0x83, 0x11, 0x6F, 0xC5, 0xA4, 0x30, 0xB0,
	/*7A0:*/ 0x95, 0xC9, 0x58, 0x1D, 0x92, 0x09, 0xFF, 0x00, 0x38, 0x19, 0x27, 0x18, 0x00, 0x92, 0x06, 0xB9,
	/*7B0:*/ 0xE9, 0x70, 0x58, 0x37, 0xFD, 0x97, 0x26, 0xDC, 0xDF, 0x3B, 0x1E, 0x9D, 0x06, 0xC8, 0xDD, 0xC9,
	/*7C0:*/ 0xD0, 0x9D, 0xAA, 0x5C, 0x3B, 0x6B, 0x1D, 0xEC, 0x9A, 0x9C, 0x30, 0xB1, 0xE2, 0x49, 0x6E, 0x2E,
	/*7D0:*/ 0x79, 0x80, 0xA0, 0x42, 0x96, 0xCF, 0x75, 0x03, 0xDD, 0x24, 0x2D, 0x27, 0x3D, 0x33, 0xD6, 0x79,
	/*7E0:*/ 0xDE, 0x9D, 0x8E, 0x81, 0x6D, 0xDD, 0x35, 0xED, 0xF2, 0xB4, 0x6D, 0x27, 0xAE, 0xED, 0xD5, 0x85,
	/*7F0:*/ 0x4B, 0xF0, 0x29, 0xD4, 0xF7, 0xA5, 0x9F, 0x03, 0xC4, 0x03, 0x87, 0x8C, 0x96, 0xCF, 0xAB, 0x89,
	/*800:*/ 0x6C, 0x91, 0xC1, 0x24, 0x72, 0x00, 0x80, 0x02, 0x95, 0xCB, 0x45, 0x21, 0x73, 0xFF, 0x00, 0x7A,
	/*810:*/ 0x76, 0x56, 0xD7, 0xEA, 0x52, 0xC4, 0x9B, 0xBD, 0x3B, 0x2B, 0x08, 0x45, 0x9F, 0x1C, 0x78, 0x97,
	/*820:*/ 0x6D, 0x8C, 0xD6, 0x0B, 0xD0, 0x5D, 0x20, 0x95, 0x3E, 0xC2, 0x00, 0xF8, 0x90, 0x70, 0x55, 0x80,
	/*830:*/ 0x30, 0x46, 0x48, 0x00, 0x85, 0x25, 0x3A, 0xE3, 0xF6, 0x4F, 0xFF, 0x00, 0x0C, 0x33, 0xBF, 0xB8,
	/*840:*/ 0xE5, 0xFF, 0x00, 0xE3, 0x1F, 0x55, 0x25, 0xDF, 0xB5, 0xD7, 0xEE, 0xDB, 0xD5, 0x28, 0x1B, 0xC3,
	/*850:*/ 0x63, 0xA2, 0x99, 0x6D, 0xEF, 0x49, 0xA7, 0x7D, 0xA7, 0x77, 0x6D, 0xDD, 0x31, 0xDE, 0x6D, 0xCE,
	/*860:*/ 0x60, 0xAB, 0xE6, 0x3A, 0x96, 0x47, 0xF3, 0x28, 0x00, 0xA7, 0x19, 0x04, 0xE1, 0x59, 0x52, 0x0F,
	/*870:*/ 0x24, 0xE5, 0x5A, 0xCF, 0xA3, 0x7B, 0xD2, 0xC6, 0xDC, 0x7D, 0xA9, 0x97, 0x74, 0x58, 0x94, 0x55,
	/*880:*/ 0x5B, 0x91, 0xEA, 0xD5, 0x57, 0xA4, 0xD5, 0x69, 0x27, 0x3C, 0x23, 0x54, 0x4B, 0x6D, 0x07, 0xC2,
	/*890:*/ 0x3D, 0xB8, 0x90, 0x10, 0xA1, 0xC7, 0x03, 0xE2, 0xF4, 0x49, 0xC8, 0x10, 0x08, 0x3B, 0x2C, 0x8F,
	/*8A0:*/ 0x8D, 0xF1, 0xD7, 0x1B, 0x48, 0xB1, 0x62, 0xFB, 0x8F, 0x3F, 0x2F, 0x75, 0x2B, 0xEA, 0x3A, 0xD0,
	/*8B0:*/ 0xAB, 0x5F, 0x9B, 0x35, 0x70, 0xD0, 0xA8, 0x71, 0x7C, 0xED, 0x52, 0x50, 0x67, 0xC1, 0x63, 0xC4,
	/*8C0:*/ 0x4A, 0x39, 0x71, 0x79, 0xB5, 0x1E, 0xEA, 0x20, 0x0E, 0xC9, 0x27, 0xB9, 0xD6, 0x42, 0x63, 0x61,
	/*8D0:*/ 0xB7, 0xE5, 0x1B, 0x70, 0xBB, 0x11, 0x16, 0xF3, 0x0D, 0xD0, 0x1E, 0x99, 0xE7, 0x5C, 0x41, 0x95,
	/*8E0:*/ 0x17, 0x99, 0x73, 0x00, 0x77, 0x57, 0x89, 0x9C, 0x7C, 0x20, 0xE3, 0xF2, 0xD6, 0xC9, 0xDF, 0x8A,
	/*8F0:*/ 0x7D, 0xD5, 0x54, 0xDA, 0xAA, 0xDC, 0x5B, 0x25, 0xD9, 0x0C, 0xDC, 0xAE, 0x78, 0x3E, 0x55, 0x71,
	/*900:*/ 0x5D, 0x4B, 0x6E, 0x0C, 0x3C, 0x82, 0xBC, 0x29, 0x4A, 0x48, 0x1F, 0x00, 0x57, 0xF3, 0x0E, 0xDA,
	/*910:*/ 0x8E, 0x33, 0x44, 0xDC, 0x71, 0xBA, 0x0C, 0x4E, 0x76, 0x5C, 0x81, 0x6D, 0xFD, 0xD7, 0x4C, 0x67,
	/*920:*/ 0x18, 0x4C, 0x94, 0x29, 0x26, 0xA7, 0xF1, 0x12, 0xA2, 0x9E, 0xDF, 0x97, 0xC6, 0x00, 0xEF, 0x8F,
	/*930:*/ 0x6C, 0xEA, 0xF7, 0x05, 0x9B, 0xCD, 0x81, 0x8B, 0x94, 0xC6, 0x34, 0x8B, 0xE2, 0xD4, 0x13, 0xAF,
	/*940:*/ 0xDC, 0x78, 0x5C, 0xF6, 0x37, 0x28, 0x87, 0x1D, 0x2F, 0x39, 0xEF, 0x70, 0x35, 0xC3, 0xA1, 0x03,
	/*950:*/ 0x4F, 0xB1, 0xF2, 0xAA, 0x7B, 0xD3, 0xA6, 0xAB, 0xB6, 0x2F, 0x4B, 0xD6, 0xF5, 0x93, 0x4B, 0x8A,
	/*960:*/ 0xD5, 0x5A, 0xE0, 0x66, 0xA9, 0xE7, 0xE5, 0xB6, 0xCB, 0xC8, 0x42, 0x10, 0x14, 0x97, 0x72, 0x02,
	/*970:*/ 0x96, 0x40, 0x3C, 0x79, 0x20, 0x1F, 0xA9, 0xCE, 0x3B, 0x6B, 0x43, 0xEC, 0xE5, 0xBD, 0x3E, 0xD5,
	/*980:*/ 0xDA, 0x9B, 0x5E, 0x8F, 0x53, 0x63, 0xCB, 0x54, 0x61, 0x53, 0xDB, 0x61, 0xF6, 0x79, 0x05, 0x70,
	/*990:*/ 0x58, 0x1D, 0xC6, 0x41, 0x20, 0xFE, 0x87, 0x50, 0xFA, 0x35, 0x23, 0x71, 0x1B, 0xDC, 0x4B, 0x15,
	/*9A0:*/ 0xF9, 0x6F, 0x4E, 0x34, 0x66, 0x2D, 0xE6, 0x9A, 0xAC, 0xF3, 0x94, 0xD9, 0x61, 0x52, 0xC3, 0x6E,
	/*9B0:*/ 0x87, 0x39, 0x23, 0x39, 0x53, 0x85, 0xC2, 0xC1, 0x0A, 0x48, 0xC6, 0x12, 0xAE, 0xFD, 0xF0, 0x5B,
	/*9C0:*/ 0x65, 0x4B, 0xDC, 0x58, 0xD6, 0xFD, 0xAA, 0xDD, 0xC3, 0xE6, 0x9B, 0x9A, 0xC5, 0x69, 0xF5, 0x54,
	/*9D0:*/ 0xD4, 0xFC, 0xD4, 0x3C, 0xA7, 0xA2, 0xF9, 0x67, 0x80, 0x52, 0x88, 0x24, 0x71, 0x2F, 0x94, 0x14,
	/*9E0:*/ 0xA1, 0x27, 0xB0, 0x09, 0x38, 0x03, 0xB0, 0xD7, 0xC4, 0x66, 0x33, 0x62, 0xA2, 0xE5, 0x49, 0x5F,
	/*9F0:*/ 0xB8, 0xBB, 0xDE, 0xCF, 0xE1, 0x6C, 0xE1, 0xF2, 0xE8, 0x70, 0xB2, 0xF3, 0x63, 0xBF, 0xDA, 0x1B,
	/*A00:*/ 0xED, 0x43, 0xF2, 0xAA, 0x1D, 0x85, 0xE9, 0xDE, 0xF6, 0xB6, 0xE8, 0xDB, 0xA3, 0x4F, 0xAE, 0x53,
	/*A10:*/ 0x11, 0x4A, 0x55, 0x7E, 0x96, 0xB8, 0x70, 0x9D, 0x5C, 0x86, 0xDC, 0x4A, 0x9C, 0x50, 0x70, 0x0C,
	/*A20:*/ 0xF0, 0x51, 0x20, 0x7C, 0x43, 0xD4, 0x6A, 0xB0, 0x81, 0xD3, 0x8E, 0xF5, 0x27, 0x6F, 0xAB, 0x16,
	/*A30:*/ 0x92, 0x2D, 0xC8, 0xCD, 0x52, 0xD7, 0x50, 0x6E, 0x79, 0x4B, 0xB2, 0x59, 0xF1, 0x9E, 0x75, 0x29,
	/*A40:*/ 0x28, 0x1C, 0x15, 0xE2, 0x63, 0x88, 0x49, 0x24, 0xE7, 0x1E, 0xD8, 0xFA, 0x6B, 0x40, 0x44, 0xB7,
	/*A50:*/ 0xF7, 0xA2, 0x36, 0xD7, 0xD5, 0x22, 0xCC, 0x7E, 0x64, 0xEB, 0x85, 0x17, 0x02, 0x1C, 0x8A, 0x5B,
	/*A60:*/ 0x9E, 0xDB, 0x6E, 0xBD, 0x03, 0x82, 0x48, 0x49, 0x71, 0x24, 0x71, 0x01, 0xC3, 0xC5, 0x5D, 0xF2,
	/*A70:*/ 0x52, 0x85, 0x1E, 0xF9, 0xC1, 0xD1, 0xC8, 0xE5, 0xC1, 0x3C, 0x86, 0x15, 0x8E, 0xE0, 0x7D, 0x75,
	/*A80:*/ 0x66, 0xDF, 0xD4, 0x18, 0x96, 0xC8, 0xF9, 0x38, 0x5A, 0x4B, 0x88, 0x3B, 0x1D, 0x0B, 0x74, 0x15,
	/*A90:*/ 0xAA, 0xAC, 0x77, 0xE9, 0xFC, 0x33, 0xA3, 0x64, 0x7C, 0x4E, 0x01, 0xA0, 0x8D, 0xC6, 0xA1, 0xDA,
	/*AA0:*/ 0x9B, 0xD1, 0x63, 0x0D, 0xEF, 0xD9, 0x0B, 0x8E, 0x7E, 0xC2, 0xED, 0x9C, 0x05, 0x18, 0x10, 0xAB,
	/*AB0:*/ 0x34, 0x36, 0xDD, 0x66, 0x44, 0x19, 0xB3, 0xD8, 0x60, 0xA8, 0xAF, 0x89, 0xF8, 0x56, 0xB5, 0x84,
	/*AC0:*/ 0x28, 0x8E, 0x1D, 0xC0, 0x57, 0xBF, 0xE5, 0xA8, 0x3C, 0x65, 0x5D, 0x27, 0xAB, 0x4B, 0x1B, 0xEF,
	/*AD0:*/ 0x84, 0x78, 0x31, 0x2B, 0x21, 0x70, 0x12, 0xA6, 0x29, 0xEA, 0xE4, 0x84, 0x20, 0x25, 0x21, 0x00,
	/*AE0:*/ 0x9E, 0x4A, 0x05, 0x58, 0x00, 0x9C, 0x12, 0x3B, 0xF6, 0xD6, 0xCF, 0xDD, 0xED, 0x9D, 0xA1, 0x6F,
	/*AF0:*/ 0x45, 0xB8, 0xD5, 0x22, 0xB6, 0xA9, 0x2C, 0x25, 0x87, 0x7C, 0x76, 0x24, 0xC4, 0x58, 0x43, 0x8D,
	/*B00:*/ 0x2F, 0x04, 0x76, 0xC8, 0x20, 0x82, 0x0F, 0x70, 0x47, 0xD3, 0xDC, 0x6A, 0x07, 0xB6, 0x5D, 0x1F,
	/*B10:*/ 0xDA, 0x1B, 0x6D, 0x76, 0x46, 0xB8, 0xD3, 0x3A, 0xA7, 0x59, 0xA9, 0xC5, 0xEF, 0x1C, 0xCE, 0x71,
	/*B20:*/ 0x1C, 0x1B, 0x38, 0xE2, 0x15, 0x84, 0xA4, 0x64, 0x81, 0xE9, 0x93, 0x81, 0xF4, 0xEC, 0x35, 0x61,
	/*B30:*/ 0x85, 0xCE, 0x61, 0x6E, 0x15, 0xC2, 0x73, 0xD5, 0x4F, 0xA0, 0x1B, 0xFC, 0xCD, 0xE8, 0x6F, 0x6B,
	/*B40:*/ 0xF6, 0xB5, 0x5F, 0x89, 0xC9, 0xE6, 0x76, 0x29, 0xA6, 0x11, 0xD3, 0x6C, 0xB2, 0x5D, 0xFC, 0x34,
	/*B50:*/ 0xD4, 0x56, 0xF5, 0xEF, 0x4A, 0xA4, 0xAD, 0x6C, 0xF6, 0xEB, 0x6D, 0x4E, 0xFA, 0x5C, 0x57, 0x95,
	/*B60:*/ 0x97, 0x41, 0x8D, 0x71, 0x46, 0xAA, 0x2E, 0x4A, 0xD9, 0x71, 0x6F, 0x23, 0xE5, 0x87, 0x95, 0xC8,
	/*B70:*/ 0x85, 0x24, 0xAD, 0x04, 0x29, 0x24, 0xFA, 0xF7, 0x07, 0x1F, 0x9E, 0xAC, 0x5D, 0xB2, 0xDB, 0xBD,
	/*B80:*/ 0xD6, 0xAD, 0xED, 0x65, 0xF5, 0x4E, 0xDC, 0x0A, 0xB2, 0xDC, 0xA9, 0x56, 0xA0, 0x2E, 0x1D, 0x3A,
	/*B90:*/ 0x24, 0xA7, 0x90, 0xE7, 0x97, 0x25, 0xB7, 0x01, 0x52, 0x8A, 0x32, 0x00, 0x51, 0x52, 0x07, 0xA9,
	/*BA0:*/ 0xFC, 0x3A, 0xB1, 0xAE, 0xBA, 0x05, 0xD2, 0xF5, 0xD9, 0x71, 0x4F, 0xA4, 0xCB, 0x9A, 0x98, 0xAE,
	/*BB0:*/ 0xDB, 0x0E, 0x46, 0x82, 0xCA, 0x65, 0x84, 0xB2, 0x9A, 0x81, 0x53, 0x9C, 0x54, 0x1B, 0x27, 0x01,
	/*BC0:*/ 0x78, 0xF0, 0xFE, 0x33, 0xDB, 0xFE, 0xF5, 0xE5, 0x5B, 0x94, 0xAB, 0xC5, 0xAA, 0x96, 0xDB, 0x2A,
	/*BD0:*/ 0xA2, 0x2B, 0x0E, 0x45, 0x8F, 0x4C, 0x79, 0x15, 0x40, 0x89, 0x68, 0x48, 0x4C, 0xC2, 0x11, 0x85,
	/*BE0:*/ 0x49, 0x0A, 0x71, 0x45, 0xC4, 0x60, 0x38, 0x12, 0x12, 0xA5, 0xE1, 0x44, 0x1E, 0xDE, 0xBA, 0xA5,
	/*BF0:*/ 0x97, 0x38, 0x96, 0x68, 0xC3, 0x5C, 0xC6, 0xD8, 0xE1, 0xEA, 0xAD, 0x7A, 0x76, 0xEF, 0xF7, 0xAD,
	/*C00:*/ 0xD5, 0xCC, 0x59, 0x3C, 0x50, 0xC8, 0x5E, 0xD7, 0xBA, 0x8F, 0x17, 0x4D, 0xE9, 0xD5, 0xBF, 0x6F,
	/*C10:*/ 0xB5, 0xAA, 0x63, 0xA7, 0x4D, 0xA7, 0xDC, 0xEB, 0x52, 0x8D, 0x77, 0x58, 0x55, 0xFA, 0x0B, 0x34,
	/*C20:*/ 0xAB, 0x6A, 0xB1, 0x12, 0x5E, 0x6A, 0x4B, 0x71, 0x0E, 0x2D, 0x32, 0x16, 0xD0, 0x69, 0x38, 0x28,
	/*C30:*/ 0x70, 0xE5, 0x38, 0x19, 0xC7, 0x1F, 0x6F, 0x51, 0xA8, 0x8D, 0x9D, 0xB6, 0xBB, 0xFF, 0x00, 0xB4,
	/*C40:*/ 0xD4, 0x0A, 0xDD, 0xAD, 0x6D, 0xDB, 0xCD, 0xB4, 0x9A, 0x8C, 0xA6, 0xDE, 0xFB, 0x5E, 0x34, 0xA6,
	/*C50:*/ 0x79, 0xA3, 0x8F, 0xFA, 0x14, 0x5C, 0x00, 0x02, 0x3D, 0x79, 0x27, 0x38, 0xFA, 0x6A, 0xDF, 0x9B,
	/*C60:*/ 0x6E, 0x6F, 0x79, 0xDA, 0x6A, 0xC3, 0x2C, 0x4F, 0x74, 0xDE, 0x22, 0xB4, 0x99, 0x10, 0x4A, 0x64,
	/*C70:*/ 0xB6, 0x9E, 0x50, 0xD2, 0xD2, 0x7E, 0x52, 0x94, 0x49, 0x03, 0x92, 0x81, 0x49, 0x3D, 0xBB, 0x9C,
	/*C80:*/ 0x80, 0x06, 0xA5, 0xF5, 0x2A, 0x3E, 0xE2, 0x2B, 0x70, 0xEE, 0x57, 0xA3, 0x3F, 0x33, 0xEC, 0x47,
	/*C90:*/ 0x2D, 0xB5, 0xB3, 0x00, 0xF9, 0xA6, 0xC3, 0x22, 0x67, 0x04, 0x84, 0x71, 0x46, 0x72, 0x1D, 0x0B,
	/*CA0:*/ 0x0E, 0x12, 0xB2, 0x31, 0x82, 0x9E, 0xFE, 0xC3, 0x3F, 0xAE, 0xCC, 0x5E, 0xF7, 0x3A, 0x26, 0x10,
	/*CB0:*/ 0xFA, 0x24, 0x10, 0x6A, 0xC7, 0x7D, 0xD6, 0x0F, 0x42, 0x84, 0x31, 0x8D, 0x6C, 0xAE, 0x05, 0x96,
	/*CC0:*/ 0x01, 0x04, 0x5D, 0x1E, 0xDB, 0x2A, 0xAB, 0x7A, 0xB6, 0x4B, 0x73, 0x6F, 0x8D, 0x98, 0xB2, 0x69,
	/*CD0:*/ 0x32, 0x41, 0xB9, 0xAE, 0x98, 0x92, 0x9E, 0x91, 0x50, 0x74, 0xC9, 0x6D, 0x3C, 0x02, 0xF2, 0x52,
	/*CE0:*/ 0x9E, 0x4A, 0x29, 0x0A, 0xC0, 0xC2, 0x7B, 0x7B, 0x8F, 0xA6, 0xBF, 0x25, 0x2B, 0x62, 0x2F, 0xCB,
	/*CF0:*/ 0x0B, 0x7E, 0xED, 0x7B, 0xBE, 0x87, 0x44, 0xF3, 0x14, 0xB5, 0x45, 0x86, 0x9A, 0x9A, 0x5B, 0x94,
	/*D00:*/ 0xCA, 0x43, 0x4A, 0x2C, 0xA5, 0xA9, 0x29, 0xC1, 0x58, 0x2A, 0x20, 0x85, 0x2F, 0xB0, 0x20, 0x92,
	/*D10:*/ 0x31, 0xAB, 0x89, 0xF8, 0xB7, 0xFD, 0x42, 0xF0, 0xDB, 0x49, 0x8C, 0xB7, 0x51, 0x87, 0x4A, 0x6A,
	/*D20:*/ 0x2A, 0x85, 0x6D, 0x87, 0x64, 0x34, 0x12, 0x97, 0x3C, 0x3C, 0x2B, 0xC7, 0x48, 0x51, 0xE6, 0x49,
	/*D30:*/ 0xC7, 0x12, 0x9E, 0x58, 0x39, 0x3D, 0xB5, 0xE6, 0x51, 0x2D, 0xAD, 0xCC, 0x9B, 0x66, 0x48, 0x8B,
	/*D40:*/ 0x3A, 0x75, 0x42, 0x99, 0x57, 0x4D, 0xD4, 0xDB, 0xBE, 0x64, 0x4C, 0x43, 0xAB, 0x7E, 0x9C, 0x5D,
	/*D50:*/ 0x40, 0x7F, 0x8F, 0x72, 0x10, 0x8F, 0x0D, 0x4E, 0x70, 0x48, 0xC1, 0x1C, 0x52, 0x42, 0x41, 0xED,
	/*D60:*/ 0xAC, 0x6C, 0xCE, 0xB1, 0x0C, 0x8C, 0xC4, 0x1A, 0xDE, 0x13, 0xC5, 0xA5, 0x1F, 0x88, 0xD9, 0xEF,
	/*D70:*/ 0xDB, 0xB7, 0x85, 0x95, 0xD9, 0x26, 0x1D, 0xF2, 0x09, 0x4B, 0x9D, 0xC4, 0x38, 0x75, 0xB1, 0xF0,
	/*D80:*/ 0xE8, 0x3B, 0x77, 0xEF, 0xE5, 0x5E, 0x7A, 0x69, 0xA6, 0xB9, 0xF5, 0x7E, 0x9A, 0x69, 0xA6, 0x88,
	/*D90:*/ 0xA1, 0x71, 0x36, 0x7A, 0xD4, 0x85, 0xB9, 0x12, 0xAF, 0xB6, 0xA9, 0x68, 0xFB, 0xC9, 0x25, 0xA0,
	/*DA0:*/ 0xD2, 0xA4, 0xA9, 0x45, 0x41, 0x3D, 0xB8, 0x95, 0xA5, 0x27, 0xB2, 0x54, 0x53, 0x84, 0x92, 0x3D,
	/*DB0:*/ 0x86, 0x3D, 0xCE, 0x64, 0x74, 0x4B, 0x72, 0x93, 0x6D, 0x37, 0x29, 0xBA, 0x45, 0x32, 0x1D, 0x2D,
	/*DC0:*/ 0xB9, 0x4F, 0xAA, 0x53, 0xE8, 0x86, 0xC2, 0x5A, 0x4B, 0xAF, 0x28, 0x00, 0xA7, 0x14, 0x12, 0x06,
	/*DD0:*/ 0x54, 0x70, 0x32, 0xA3, 0xDC, 0xE3, 0x5E, 0x8E, 0x9A, 0xF0, 0xD6, 0x35, 0x97, 0xC2, 0x2A, 0xD6,
	/*DE0:*/ 0xCC, 0xF8, 0x99, 0xB1, 0x25, 0xA6, 0x77, 0x97, 0x70, 0x80, 0xD1, 0x66, 0xE8, 0x0D, 0x80, 0xF0,
	/*DF0:*/ 0x07, 0x60, 0x9A, 0x69, 0xA6, 0xBD, 0xAD, 0x64, 0xD3, 0x4D, 0x34, 0x44, 0xD3, 0x4D, 0x34, 0x44,
	/*E00:*/ 0xD3, 0x4D, 0x34, 0x44, 0xD3, 0x4D, 0x34, 0x44, 0xD3, 0x4D, 0x34, 0x44, 0xD3, 0x4D, 0x34, 0x44,
	/*E10:*/ 0xD3, 0x4D, 0x34, 0x45, 0xFF, 0xD9,
};

uint32_t eve_load_images(uint32_t start_addr)
{
	uint8_t buf[128];
	uint32_t img_width = 0;
	uint32_t img_height = 0;
	uint8_t *img = (uint8_t *)img_bridgetek_logo;
	int8_t flag;
	uint32_t eve_addr;
	unsigned int i;

	flag = 0;

	EVE_LIB_BeginCoProList();
	EVE_CMD_LOADIMAGE(start_addr, 0);

	// Send raw JPEG encoded image data to coprocessor. It will be decoded
	// as the data is received.
	while (flag != 2)
	{
		for (i = 0; i < sizeof(buf); i++)
		{
			buf[i] = *img++;
			if (buf[i] == 0xff)
			{
				flag = 1;
			}
			else
			{
				if (flag == 1)
				{
					if (buf[i] == 0xd9)
					{
						flag = 2;
						i++;
						break;
					}
				}
				flag = 0;
			}
		}
		EVE_LIB_WriteDataToCMD(buf, (i + 3)&(~3));
	};
	EVE_LIB_EndCoProList();
	EVE_LIB_AwaitCoProEmpty();

	// We know the start address in RAM so do not seek this information.
	// Obtain the width and height of the expanded JPEG image.
	EVE_LIB_GetProps(&eve_addr, &img_width, &img_height);

	eve_img_bridgetek_logo_width = (uint16_t)img_width;
	eve_img_bridgetek_logo_height = (uint16_t)img_height;

	EVE_LIB_BeginCoProList();
	EVE_CMD_DLSTART();

	EVE_BEGIN(EVE_BEGIN_BITMAPS);
	EVE_BITMAP_HANDLE(BITMAP_BRIDGETEK_LOGO);
	// Optional to mask the bitmap source here with 0x3FFFFF to ensure that only the valid bits for addressing within RAM_G are set.
	// BT81x now supports additional addressing where the source is in flash (see bitmap_source in the programmers guide)
	EVE_BITMAP_SOURCE(start_addr & 0x3FFFFF);
	EVE_BITMAP_LAYOUT(EVE_FORMAT_RGB565, img_width * 2, img_height);
#if (defined EVE2_ENABLE || defined EVE3_ENABLE || defined EVE4_ENABLE)
	EVE_BITMAP_LAYOUT_H((img_width * 2) >> 10, img_height >> 9);
#endif
	EVE_BITMAP_SIZE(EVE_FILTER_NEAREST, EVE_WRAP_BORDER, EVE_WRAP_BORDER,
			img_width, img_height);
#if (defined EVE2_ENABLE || defined EVE3_ENABLE || defined EVE4_ENABLE)
	EVE_BITMAP_SIZE_H(img_width >> 9, img_height >> 9);
#endif
	EVE_END();

	EVE_DISPLAY();
	EVE_CMD_SWAP();
	EVE_LIB_EndCoProList();
	EVE_LIB_AwaitCoProEmpty();

	start_addr += ((img_width * 2) * img_height);
	start_addr = (start_addr + 3) & (~3);
	return start_addr;
}
